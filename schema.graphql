type Query {
  converts(where: ConvertWhereInput, orderBy: ConvertOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ConvertConnection!
}

type Mutation {
  createJSConvert(input: JSCreateInput): Convert!
  updateJSConvert(input: JSUpdateInput,  where: ConvertWhereInput ):Convert!
  deleteJSConvert(where: ConvertWhereInput ):Convert
}

enum ConvertOrderByInput {
  id_ASC
  id_DESC
  createdTime_ASC
  createdTime_DESC
}


type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}
type AggregateConvert {
  count: Int!
}

# 转化跟踪方式
enum ConvertTrack {
  All
  JS
  Xpath
  API
}

# 转化目标
enum ExternalAction{
  Phone #1  电话拨打
  Form #2表单提交
  MapSearch #3地图搜索
  DownloadFinish  #4下载完成
  Button #按钮5button
  Xpath  #6xpath类型转换
  View #7  关键页面浏览
  Active #8激活
  DownloadStart  #9下载按钮download_start
  QQ  #10qq咨询
  Lottery #11抽奖
  Vote #12投票

}



interface Node {
  id: ID!
}


type Convert implements Node{
  id: ID!

  advertiserId: Int!
  convertAttribution: Int!
  convertDataType: Int!
  convertStatus: Int!
  convertType: Int!
  convertValue: Int!
  createChannel: Int! #   标志创建来源
  createTime: Time!
  data: String!
  externalAction: ExternalAction!
  externalActions: String!
  name: String!
  status: Int!
  statusModifyTime: Int!
}

type AppConvert implements Node {
  id: ID!

  advertiserID: Int!
  appId: String!  #游戏深度转化app_id
  convertAttribution: Int!
  convertDataType: Int!
  convertItunesId: Int!
  convertPackageName: String!
  convertStatus: Int!
  convertType: Int!
  convertValue: Int!
  createChannel: Int!  #   标志创建来源
  createTime: Time!
  data: String!
  downloadUrlStatus: Int!
  externalAction: ExternalAction!
  externalActions: String!
  name: String!
  status: Int!
  statusModifyTime: Int!
}

type XpathConvert implements Node{
  id: ID!

  advertiserID: Int!
  convertAttribution: Int!
  convertDataType: Int!
  convertStatus: Int!
  convertType: Int!
  convertValue: Int!
  convertXpathUrl: String!
  convertXpathValue: String!
  createChannel: Int!  #   标志创建来源
  createTime: Time!
  data: String!
  externalAction: ExternalAction!
  externalActions: String!
  name: String!
  status: Int!
  statusModifyTime: Int!
}

union ConvertResult = Convert | AppConvert | XpathConvert

interface ConvertInput{
  name: String!
  externalAction: ExternalAction
}

## input 不能使用 implements
input JSCreateInput {
  name: String!
  externalAction: ExternalAction!
}
input JSUpdateInput{
  name: String!
}
input ConvertWhereInput {
  id: ID
  name: String
  advertiserID: ID!
  createTime: Time
  status: Int
  externalAction: ExternalAction
  convertTrack: ConvertTrack  # 转化跟踪类型
}



type ConvertConnection {
  edges: [ConvertEdge!]!
  pageInfo: PageInfo!
  aggregate: AggregateConvert!
}
type ConvertEdge{
  node: ConvertResult!
  cursor: ID!
}

type User {
  id: ID!
  advertiserID: ID!
}

scalar Time
